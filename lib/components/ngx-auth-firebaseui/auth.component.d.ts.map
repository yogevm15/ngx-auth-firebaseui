{"version":3,"file":"auth.component.d.ts","sources":["auth.component.d.ts"],"names":[],"mappingssourcesContent":["import { AfterViewInit, ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { AbstractControl, FormGroup } from \"@angular/forms\";\nimport { MatTabChangeEvent, MatTabGroup } from \"@angular/material/tabs\";\nimport { ThemePalette } from \"@angular/material/core\";\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\nimport { MatFormFieldAppearance } from \"@angular/material/form-field\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { MatPasswordStrengthComponent } from \"@angular-material-extensions/password-strength\";\nimport { Subscription } from \"rxjs\";\nimport { LegalityDialogComponent, Theme } from \"..\";\nimport { NgxAuthFirebaseUIConfig } from \"../../interfaces\";\nimport { AuthProcessService, AuthProvider } from \"../../services/auth-process.service\";\nexport declare const EMAIL_REGEX: RegExp;\nexport declare const PHONE_NUMBER_REGEX: RegExp;\nexport declare class AuthComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\n    private platformId;\n    config: NgxAuthFirebaseUIConfig;\n    auth: AngularFireAuth;\n    authProcess: AuthProcessService;\n    dialog: MatDialog;\n    private activatedRoute;\n    private changeDetectorRef;\n    matTabGroup: MatTabGroup;\n    passwordStrength: MatPasswordStrengthComponent;\n    isLoading: boolean;\n    providers: AuthProvider[] | AuthProvider;\n    providersTheme: Theme;\n    appearance: MatFormFieldAppearance;\n    tabIndex: number | null;\n    registrationEnabled: boolean;\n    resetPasswordEnabled: boolean;\n    guestEnabled: boolean;\n    tosUrl: string;\n    privacyPolicyUrl: string;\n    goBackURL: string;\n    messageOnAuthSuccess: string;\n    messageOnAuthError: string;\n    messageOnEmailConfirmationSuccess: string;\n    onSuccess: any;\n    onError: any;\n    selectedTabChange: EventEmitter<MatTabChangeEvent>;\n    enableLengthRule: boolean;\n    enableLowerCaseLetterRule: boolean;\n    enableUpperCaseLetterRule: boolean;\n    enableDigitRule: boolean;\n    enableSpecialCharRule: boolean;\n    min: number;\n    max: number;\n    customValidator: RegExp;\n    onStrengthChanged: EventEmitter<number>;\n    verifyEmailTemplate: TemplateRef<any>;\n    verifyEmailTitleText: string;\n    verifyEmailConfirmationText: string;\n    verifyEmailGoBackText: string;\n    sendNewVerificationEmailText: string;\n    signOutText: string;\n    resetPasswordTabText: string;\n    resetPasswordInputText: string;\n    resetPasswordErrorRequiredText: string;\n    resetPasswordErrorPatternText: string;\n    resetPasswordActionButtonText: string;\n    resetPasswordInstructionsText: string;\n    signInTabText: string;\n    signInCardTitleText: string;\n    loginButtonText: string;\n    forgotPasswordButtonText: string;\n    nameText: string;\n    nameErrorRequiredText: string;\n    nameErrorMinLengthText: string;\n    nameErrorMaxLengthText: string;\n    emailText: string;\n    emailErrorRequiredText: string;\n    emailErrorPatternText: string;\n    passwordText: string;\n    passwordErrorRequiredText: string;\n    passwordErrorMinLengthText: string;\n    passwordErrorMaxLengthText: string;\n    registerTabText: string;\n    registerCardTitleText: string;\n    registerButtonText: string;\n    guestButtonText: string;\n    emailConfirmationTitle: string;\n    emailConfirmationText: string;\n    authProvider: typeof AuthProvider;\n    passwordResetWished: boolean;\n    signInFormGroup: FormGroup;\n    signUpFormGroup: FormGroup;\n    resetPasswordFormGroup: FormGroup;\n    onErrorSubscription: Subscription;\n    authenticationError: boolean;\n    passReset: boolean;\n    dialogRef: MatDialogRef<LegalityDialogComponent>;\n    authProviders: typeof AuthProvider;\n    signInEmailFormControl: AbstractControl;\n    sigInPasswordFormControl: AbstractControl;\n    sigUpNameFormControl: AbstractControl;\n    sigUpEmailFormControl: AbstractControl;\n    sigUpPasswordFormControl: AbstractControl;\n    sigUpPasswordConfirmationFormControl: AbstractControl;\n    resetPasswordEmailFormControl: AbstractControl;\n    constructor(platformId: Object, config: NgxAuthFirebaseUIConfig, auth: AngularFireAuth, authProcess: AuthProcessService, dialog: MatDialog, activatedRoute: ActivatedRoute, changeDetectorRef: ChangeDetectorRef);\n    get color(): string | ThemePalette;\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    onTabChange(event: MatTabChangeEvent): void;\n    signOut(): Promise<void>;\n    signIn(): Promise<void>;\n    updateAuthSnackbarMessages(): void;\n    createForgotPasswordTab(): void;\n    processLegalSignUP(authProvider?: AuthProvider): void;\n    signUp(): Promise<void>;\n    signUpAnonymously(): Promise<void>;\n    resetPassword(): void;\n    private chooseBackUrl;\n    private _initSignInFormGroupBuilder;\n    private _initSignUpFormGroupBuilder;\n    private _initResetPasswordFormGroupBuilder;\n    private _afterSignUpMiddleware;\n}\n"]}